---
- name: Install Wireguard VPN
  hosts: VPN
  become: yes
  
  vars:
    wg_privatekey_file: '/etc/wireguard/privatekey'
    wg_publickey_file: '/etc/wireguard/publickey'
    wg_cfg_file: '/etc/wireguard/wg0.conf'
  
  tasks:
  - name: Update and upgrade apt packages
    become: true
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400
  
  - name: Install Wireguard VPN
    become: yes
    apt: 
      name: wireguard
      state: latest

  - name: Check wg privatekey file
    stat:
      path: "{{ wg_privatekey_file }}"
    register: privatekey_file

  - name: Check wg publickey file
    stat:
      path: "{{ wg_publickey_file }}"
    register: publickey_file

  - name: Generate WG Keys
    become: yes
    shell:
      cmd: "wg genkey | tee {{ wg_privatekey_file }} | wg pubkey | tee {{ wg_publickey_file }}"
    when: not privatekey_file.stat.exists and not publickey_file.stat.exists

  - name: Change key file mode
    become: yes
    shell:
      cmd: "chmod 600 {{ wg_privatekey_file }}"
    when: not privatekey_file.stat.exists and not publickey_file.stat.exists

  - name: Get content of remote WG private key
    slurp:
      src: "{{ wg_privatekey_file }}"
    register: wg_privatekey

  - name: Get content of remote WG public key
    slurp:
      src: "{{ wg_publickey_file }}"
    register: wg_publickey

  - name: Set WG keys
    become: yes
    set_fact: 
      vpn_privatekey: "{{ wg_privatekey.content | b64decode }}"
      vpn_publickey: "{{ wg_publickey.content | b64decode }}"

  - name: Creating a wg cfg file
    copy:
      dest: "{{ wg_cfg_file }}"
      content: |
        [Interface]
        PrivateKey = {{ vpn_privatekey }}
        Address = 10.0.0.1/24
        ListenPort = 51830
        PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
        PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
  
  - name: Add ip forward
    lineinfile:
      dest: /etc/sysctl.conf
      regexp: 'net.ipv4.ip_forward=1'
      line: 'net.ipv4.ip_forward=1'
      state: present
      insertafter: EOF
      backup: yes
  
  - name: Restart ip forward
    become: yes
    shell:
      cmd: "sysctl -p"

  - name: Make sure a service unit is stopped
    systemd:
      state: stopped
      name: wg-quick@wg0.service
  
  - name: Running wg service
    systemd:
      state: started
      name: wg-quick@wg0.service
